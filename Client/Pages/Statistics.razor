@page "/statistics"
@using BlazorApp.Shared
@using System.Timers
@using Microsoft.AspNetCore.Authorization
@inject HttpClient HttpClient
@attribute [Authorize]


<div id="statistics-page-div">
    <div class="card"  style="align-items:center">
        <div class="card-header">
            <h5 style="text-align: center;">Is Blazor making JavaScript obsolete?!</h5>
        </div>
        <div class="card-body">
            @if (apiResponse is null)
            {
                <p>Loading...</p>
            }
            else
            {
                <p>Participants: @apiResponse.NumberOfVoters</p>
                <p>Yes: @apiResponse.NumberOfYes votes</p>
                <p>No: @apiResponse.NumberOfNo votes</p>
                <div style="width: 300px">
                    <div class="semi-donut"
                            style="--percentage : @(percentageYes); --fill: #532f91 ;">
                        <span class="@(emoji) fa-3x"></span>
                    </div>
                    <br>
                    <div>
                        <p class="align-left">@(percentageYes)% Yes</p>
                        <p class="align-right">@(percentageNo)% No</p>
                    </div>
                </div>
            }
        </div>
    </div>
</div>



@code{
    private ApiResponse apiResponse;
    private int percentageYes = 0;
    private int percentageNo = 0;
    private Timer timer;

    private string emoji; 

    protected override void OnInitialized()
    {
        timer = new Timer(1500);
        timer.AutoReset = true;
        timer.Elapsed += new ElapsedEventHandler(OnTimedEvent);
        timer.Start();
    }
    
    private async void OnTimedEvent(Object source, ElapsedEventArgs e)
    {
        apiResponse = await HttpClient.GetFromJsonAsync<ApiResponse>("api/GetVoting");
        if (apiResponse.NumberOfVoters > 0)
        {
            percentageYes = (int)Math.Round((double)(100 * apiResponse.NumberOfYes) / apiResponse.NumberOfVoters);
            percentageNo = (int)Math.Round((double)(100 * apiResponse.NumberOfNo) / apiResponse.NumberOfVoters);

            if(apiResponse.NumberOfYes > apiResponse.NumberOfNo)
            {
                emoji = "far fa-grin-hearts";
            }
            else if(apiResponse.NumberOfNo > apiResponse.NumberOfYes)
            {
                emoji = "far fa-tired";
            }

            if (Math.Abs(percentageYes - percentageNo) <= 10)
            {
                emoji = "far fa-surprise";
            }
        }

        await InvokeAsync(() => 
        {
            StateHasChanged();
        });
    }
}